{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kh3m\\\\Documents\\\\projects\\\\austinExpress\\\\container\\\\SignUp.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from \"react\";\nimport SwitchEntry from \"./SwitchEntry\";\nimport EntryButton from \"../components/UI/EntryButton\";\nimport Input from \"../components/UI/Input\";\nimport * as actionTypes from \"./actionTypes\";\nconst controls = {\n  fullname: {\n    eleType: \"input\",\n    eleConfig: {\n      type: \"text\",\n      placeholder: \"Full Name\",\n      required: true\n    },\n    validation: {\n      required: true,\n      length: {\n        min: 5\n      },\n      match: /(?:^[ a-zA-Z]{5,}$)/\n    },\n    valid: true,\n    value: \"\"\n  },\n  email: {\n    eleType: \"input\",\n    eleConfig: {\n      type: \"email\",\n      placeholder: \"Email\",\n      required: true\n    },\n    validation: {\n      required: true,\n      match: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n    },\n    valid: true,\n    value: \"\"\n  },\n  password: {\n    eleType: \"input\",\n    eleConfig: {\n      type: \"password\",\n      placeholder: \"Password\",\n      required: true\n    },\n    validation: {\n      required: true,\n      length: {\n        min: 5\n      }\n    },\n    valid: true,\n    value: \"\"\n  }\n};\n\nconst signUpFormReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.START_TYPING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.field]: _objectSpread(_objectSpread({}, state[action.field]), {}, {\n          value: action.value\n        })\n      });\n\n    case actionTypes.CHECK_VALIDITY:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.field]: _objectSpread(_objectSpread({}, state[action.field]), {}, {\n          valid: action.valid\n        })\n      });\n\n    default:\n      throw new Error(\"No command found\");\n  }\n};\n\nconst SignUp = props => {\n  const {\n    0: signUpFormState,\n    1: dispatch\n  } = useReducer(signUpFormReducer, controls); // check validity\n\n  const chectValidity = (rules, value) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value !== \"\" && isValid;\n    }\n\n    if (rules.length) {\n      if (rules.length.min) {\n        isValid = value.length >= rules.length.min && isValid;\n      }\n    }\n\n    if (rules.match) {\n      isValid = rules.match.test(value) && isValid;\n    }\n\n    return isValid;\n  }; // signup click handler\n\n\n  const onSignUpHandler = event => {\n    event.preventDefault();\n    const signUpFormData = {\n      fullname: signUpFormState.fullname.value,\n      email: signUpFormState.email.value,\n      password: signUpFormState.password.value\n    };\n    fetch(\"http://localhost:2020/auth/local/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(signUpFormData)\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n    }).catch(error => console.log(error));\n  }; // two way binding...\n\n\n  const onInputChangeHandler = (event, field) => {\n    dispatch({\n      type: actionTypes.START_TYPING,\n      field,\n      value: event.target.value\n    });\n    dispatch({\n      type: actionTypes.CHECK_VALIDITY,\n      field,\n      valid: chectValidity(signUpFormState[field].validation, event.target.value)\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Sign up\"), __jsx(SwitchEntry, {\n    guest: props.guest,\n    toggleAccount: props.toggleAccount,\n    entry: \" Sign In\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, Object.keys(signUpFormState).map(field => {\n    return __jsx(Input, {\n      change: event => onInputChangeHandler(event, field),\n      value: signUpFormState[field].value,\n      inValid: !signUpFormState[field].valid,\n      key: field,\n      eleConfig: signUpFormState[field].eleConfig,\n      eleType: signUpFormState[field].eleType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    });\n  }), __jsx(EntryButton, {\n    sign: event => onSignUpHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \" \", \"Sign Up\", \" \")));\n};\n\nexport default SignUp;","map":{"version":3,"sources":["C:/Users/Kh3m/Documents/projects/austinExpress/container/SignUp.js"],"names":["React","useReducer","SwitchEntry","EntryButton","Input","actionTypes","controls","fullname","eleType","eleConfig","type","placeholder","required","validation","length","min","match","valid","value","email","password","signUpFormReducer","state","action","START_TYPING","field","CHECK_VALIDITY","Error","SignUp","props","signUpFormState","dispatch","chectValidity","rules","isValid","test","onSignUpHandler","event","preventDefault","signUpFormData","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","catch","error","onInputChangeHandler","target","guest","toggleAccount","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport SwitchEntry from \"./SwitchEntry\";\r\nimport EntryButton from \"../components/UI/EntryButton\";\r\nimport Input from \"../components/UI/Input\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst controls = {\r\n  fullname: {\r\n    eleType: \"input\",\r\n    eleConfig: {\r\n      type: \"text\",\r\n      placeholder: \"Full Name\",\r\n      required: true,\r\n    },\r\n    validation: {\r\n      required: true,\r\n      length: { min: 5 },\r\n      match: /(?:^[ a-zA-Z]{5,}$)/,\r\n    },\r\n    valid: true,\r\n    value: \"\",\r\n  },\r\n  email: {\r\n    eleType: \"input\",\r\n    eleConfig: {\r\n      type: \"email\",\r\n      placeholder: \"Email\",\r\n      required: true,\r\n    },\r\n    validation: {\r\n      required: true,\r\n      match: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\r\n    },\r\n    valid: true,\r\n    value: \"\",\r\n  },\r\n  password: {\r\n    eleType: \"input\",\r\n    eleConfig: {\r\n      type: \"password\",\r\n      placeholder: \"Password\",\r\n      required: true,\r\n    },\r\n    validation: {\r\n      required: true,\r\n      length: { min: 5 },\r\n    },\r\n    valid: true,\r\n    value: \"\",\r\n  },\r\n};\r\n\r\nconst signUpFormReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.START_TYPING:\r\n      return {\r\n        ...state,\r\n        [action.field]: { ...state[action.field], value: action.value },\r\n      };\r\n    case actionTypes.CHECK_VALIDITY:\r\n      return {\r\n        ...state,\r\n        [action.field]: { ...state[action.field], valid: action.valid },\r\n      };\r\n    default:\r\n      throw new Error(\"No command found\");\r\n  }\r\n};\r\n\r\nconst SignUp = (props) => {\r\n  const [signUpFormState, dispatch] = useReducer(signUpFormReducer, controls);\r\n\r\n  // check validity\r\n  const chectValidity = (rules, value) => {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.length) {\r\n      if (rules.length.min) {\r\n        isValid = value.length >= rules.length.min && isValid;\r\n      }\r\n    }\r\n\r\n    if (rules.match) {\r\n      isValid = rules.match.test(value) && isValid;\r\n    }\r\n    return isValid;\r\n  };\r\n\r\n  // signup click handler\r\n  const onSignUpHandler = (event) => {\r\n    event.preventDefault();\r\n    const signUpFormData = {\r\n      fullname: signUpFormState.fullname.value,\r\n      email: signUpFormState.email.value,\r\n      password: signUpFormState.password.value,\r\n    };\r\n\r\n    fetch(\"http://localhost:2020/auth/local/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(signUpFormData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  // two way binding...\r\n  const onInputChangeHandler = (event, field) => {\r\n    dispatch({\r\n      type: actionTypes.START_TYPING,\r\n      field,\r\n      value: event.target.value,\r\n    });\r\n    dispatch({\r\n      type: actionTypes.CHECK_VALIDITY,\r\n      field,\r\n      valid: chectValidity(\r\n        signUpFormState[field].validation,\r\n        event.target.value\r\n      ),\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"page-title\">Sign up</h2>\r\n      <SwitchEntry\r\n        guest={props.guest}\r\n        toggleAccount={props.toggleAccount}\r\n        entry=\" Sign In\"\r\n      />\r\n      <form>\r\n        {Object.keys(signUpFormState).map((field) => {\r\n          return (\r\n            <Input\r\n              change={(event) => onInputChangeHandler(event, field)}\r\n              value={signUpFormState[field].value}\r\n              inValid={!signUpFormState[field].valid}\r\n              key={field}\r\n              eleConfig={signUpFormState[field].eleConfig}\r\n              eleType={signUpFormState[field].eleType}\r\n            />\r\n          );\r\n        })}\r\n        <EntryButton sign={(event) => onSignUpHandler(event)}>\r\n          {\" \"}\r\n          Sign Up{\" \"}\r\n        </EntryButton>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"]},"metadata":{},"sourceType":"module"}