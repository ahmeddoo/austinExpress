{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kh3m\\\\Documents\\\\projects\\\\austinExpress\\\\container\\\\SignIn.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useReducer } from \"react\";\nimport SwitchEntry from \"./SwitchEntry\";\nimport Input from \"../components/UI/Input\";\nimport EntryButton from \"../components/UI/EntryButton\";\nimport * as actionTypes from \"./actionTypes\";\nconst controls = {\n  email: {\n    eleType: \"input\",\n    eleConfig: {\n      type: \"email\",\n      placeholder: \"Email\",\n      required: true\n    },\n    validation: {\n      required: true,\n      match: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/\n    },\n    valid: true,\n    value: \"\"\n  },\n  password: {\n    eleType: \"input\",\n    eleConfig: {\n      type: \"password\",\n      placeholder: \"Password\",\n      required: true\n    },\n    validation: {\n      required: true,\n      length: {\n        min: 5\n      }\n    },\n    valid: true,\n    value: \"\"\n  }\n};\n\nconst signInFormReducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.START_TYPING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        [action.field]: _objectSpread(_objectSpread({}, state[action.field]), {}, {\n          value: action.value\n        })\n      });\n\n    default:\n      throw new Error(\"No command found\");\n  }\n};\n\nconst SignIn = props => {\n  const {\n    0: signInFormState,\n    1: dispatch\n  } = useReducer(signInFormReducer, controls); // signin click handler\n\n  const onSignInHandler = event => {\n    event.preventDefault();\n    const signInFormData = {\n      username: signInFormState.email.value,\n      password: signInFormState.password.value\n    };\n    console.log(signInFormData);\n    fetch(\"http://localhost:2020/auth/local/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(signInFormData)\n    }).then(res => res.json()).then(res => {\n      console.log(res);\n    }).catch(error => {\n      throw error;\n    });\n  }; // two way binding...\n\n\n  const onInputChangeHandler = (event, field) => {\n    dispatch({\n      type: actionTypes.START_TYPING,\n      field,\n      value: event.target.value\n    });\n  };\n\n  return __jsx(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    className: \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Sign in\"), __jsx(SwitchEntry, {\n    guest: props.guest,\n    toggleAccount: props.toggleAccount,\n    entry: \" Create account\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, Object.keys(signInFormState).map(field => {\n    return __jsx(Input, {\n      change: event => onInputChangeHandler(event, field),\n      value: signInFormState[field].value,\n      inValid: !signInFormState[field].valid,\n      key: field,\n      eleConfig: signInFormState[field].eleConfig,\n      eleType: signInFormState[field].eleType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    });\n  }), __jsx(EntryButton, {\n    sign: event => onSignInHandler(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \" \", \"Sign In\", \" \")));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["C:/Users/Kh3m/Documents/projects/austinExpress/container/SignIn.js"],"names":["React","useReducer","SwitchEntry","Input","EntryButton","actionTypes","controls","email","eleType","eleConfig","type","placeholder","required","validation","match","valid","value","password","length","min","signInFormReducer","state","action","START_TYPING","field","Error","SignIn","props","signInFormState","dispatch","onSignInHandler","event","preventDefault","signInFormData","username","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","catch","error","onInputChangeHandler","target","guest","toggleAccount","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport SwitchEntry from \"./SwitchEntry\";\r\nimport Input from \"../components/UI/Input\";\r\nimport EntryButton from \"../components/UI/EntryButton\";\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nconst controls = {\r\n  email: {\r\n    eleType: \"input\",\r\n    eleConfig: {\r\n      type: \"email\",\r\n      placeholder: \"Email\",\r\n      required: true,\r\n    },\r\n    validation: {\r\n      required: true,\r\n      match: /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/,\r\n    },\r\n    valid: true,\r\n    value: \"\",\r\n  },\r\n  password: {\r\n    eleType: \"input\",\r\n    eleConfig: {\r\n      type: \"password\",\r\n      placeholder: \"Password\",\r\n      required: true,\r\n    },\r\n    validation: {\r\n      required: true,\r\n      length: { min: 5 },\r\n    },\r\n    valid: true,\r\n    value: \"\",\r\n  },\r\n};\r\n\r\nconst signInFormReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.START_TYPING:\r\n      return {\r\n        ...state,\r\n        [action.field]: { ...state[action.field], value: action.value },\r\n      };\r\n    default:\r\n      throw new Error(\"No command found\");\r\n  }\r\n};\r\n\r\nconst SignIn = (props) => {\r\n  const [signInFormState, dispatch] = useReducer(signInFormReducer, controls);\r\n  // signin click handler\r\n  const onSignInHandler = (event) => {\r\n    event.preventDefault();\r\n    const signInFormData = {\r\n      username: signInFormState.email.value,\r\n      password: signInFormState.password.value,\r\n    };\r\n    console.log(signInFormData);\r\n\r\n    fetch(\"http://localhost:2020/auth/local/signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(signInFormData),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        throw error;\r\n      });\r\n  };\r\n\r\n  // two way binding...\r\n  const onInputChangeHandler = (event, field) => {\r\n    dispatch({\r\n      type: actionTypes.START_TYPING,\r\n      field,\r\n      value: event.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"page-title\">Sign in</h2>\r\n      <SwitchEntry\r\n        guest={props.guest}\r\n        toggleAccount={props.toggleAccount}\r\n        entry=\" Create account\"\r\n      />\r\n\r\n      <form>\r\n        {Object.keys(signInFormState).map((field) => {\r\n          return (\r\n            <Input\r\n              change={(event) => onInputChangeHandler(event, field)}\r\n              value={signInFormState[field].value}\r\n              inValid={!signInFormState[field].valid}\r\n              key={field}\r\n              eleConfig={signInFormState[field].eleConfig}\r\n              eleType={signInFormState[field].eleType}\r\n            />\r\n          );\r\n        })}\r\n        <EntryButton sign={(event) => onSignInHandler(event)}>\r\n          {\" \"}\r\n          Sign In{\" \"}\r\n        </EntryButton>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}